    async get${objName}(root, args, context, ast) {
      let db = await (typeof root.db === "function" ? root.db() : root.db);
      await processHook(hooksObj, "${objName}", "queryPreprocess", { db, root, args, context, ast });
      context.__mongodb = db;

      if(await canDetail("${objName}", context, args) == false) return {${objName}: null};
      
      let queryPacket = decontructGraphqlQuery(args, ast, ${objName}Metadata, "${objName}");
      let { aggregationPipeline } = queryPacket;
      await processHook(hooksObj, "${objName}", "queryMiddleware", queryPacket, { db, root, args, context, ast });
      let results = await load${objName}s(db, aggregationPipeline, root, args, context, ast, "${objName}");

      return {
        ${objName}: results[0] || null
      };
    }